//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <400>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        enne {
            bindings = <&enne>;
            key-positions = <18 19>;
        };

        kF1 {
            bindings = <&kp F1>;
            key-positions = <27 35>;
        };

        kF2 {
            bindings = <&kp F2>;
            key-positions = <35 28>;
        };
    };

    macros {
        enne: enne {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RA(N) &kp N>;
            label = "ENNE";
        };

        doblecomilla: doblecomilla {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES &kp SPACE>;
            label = "DOBLECOMILLA";
        };

        simplecomilla: simplecomilla {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE &kp SPACE>;
            label = "SIMPLECOMILLA";
        };
    };

    behaviors {
        borra_mac: borra_mac {
            compatible = "zmk,behavior-tap-dance";
            label = "BORRA_MAC";
            #binding-cells = <0>;
            bindings = <&kp DEL>, <&kp LG(BACKSPACE)>;
        };

        doublequote: doublequote {
            compatible = "zmk,behavior-tap-dance";
            label = "DOUBLEQUOTE";
            #binding-cells = <0>;
            bindings = <&kp U>, <&doblecomilla>;
        };

        singlequote: singlequote {
            compatible = "zmk,behavior-tap-dance";
            label = "SINGLEQUOTE";
            #binding-cells = <0>;
            bindings = <&kp J>, <&simplecomilla>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
               &mt PRINTSCREEN Q   &kp W    &mt PRINTSCREEN E  &mt LG(NUMBER_1) R  &mt LG(NUMBER_2) T     &kp Y                  &kp U        &kp I          &kp O    &kp P
               &mt LEFT_CONTROL A  &lt 2 S  &kp D              &mt LG(NUMBER_3) F  &mt LG(NUMBER_4) G     &kp H                  &kp J        &kp K          &kp L    &lt 4 SEMICOLON
&mt LCTRL TAB  &kp Z               &kp X    &kp C              &mt LG(N5) V        &mt LC(ENTER) B        &kp N                  &kp M        &kp COMMA      &kp DOT  &kp FSLH         &kp APOS
                                            &borra_mac         &lt 5 LC(ENTER)     &mt LEFT_META SPACE    &mt RIGHT_SHIFT SPACE  &lt 5 ENTER  &kp RIGHT_ALT
            >;
        };

        nav_num {
            bindings = <
                   &kp LA(BACKSPACE)   &kp BACKSPACE  &kp UP     &kp DELETE     &kp LA(DELETE)        &kp N5      &kp N6           &kp N7       &kp N8    &kp N9
                   &kp LA(LEFT_ARROW)  &kp LEFT       &kp DOWN   &kp RIGHT      &kp LA(RIGHT)         &kp N0      &kp N1           &kp N2       &kp N3    &kp N4
&kp LG(BACKSPACE)  &kp LG(UP_ARROW)    &kp LG(LEFT)   &kp ENTER  &kp LG(RIGHT)  &kp LG(DOWN_ARROW)    &kp PERIOD  &kp PLUS         &kp MINUS    &kp STAR  &kp FSLH  &kp CARET
                                                      &trans     &trans         &trans                &kp EQUAL   &kp RIGHT_SHIFT  &kp PERCENT
            >;
        };

        sym_func {
            bindings = <
           &kp ESC        &kp LEFT_BRACE        &kp C_VOLUME_UP    &kp K_VOLUME_UP   &kp K_VOLUME_UP2    &kp F1   &kp F2           &kp F3   &kp F4   &kp F5
           &kp TAB        &kp LBKT              &kp C_VOLUME_DOWN  &kp K_VOL_DN      &kp BSLH            &kp F6   &kp F7           &kp F8   &kp F9   &kp F10
&kp GRAVE  &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp C_PLAY_PAUSE   &kp GREATER_THAN  &kp UNDERSCORE      &kp F11  &kp F12          &kp F13  &kp F14  &kp F15  &kp F16
                                                &trans             &trans            &trans              &none    &kp RIGHT_SHIFT  &none
            >;
        };

        device {
            bindings = <
       &none       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP   &none    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
       &kp K_MUTE  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_VOL_DN      &none    &none         &none         &none         &none         &none
&none  &none       &none                 &none                 &kp C_PLAY_PAUSE  &none    &none         &none         &none         &none         &none         &bt BT_CLR
                                         &none                 &none             &none    &none         &none         &none
            >;
        };

        num {
            bindings = <
           &kp ESC          &kp LESS_THAN         &kp GREATER_THAN       &kp UNDERSCORE  &none          &kp COMMA      &mt AMPERSAND N7           &mt DOUBLE_QUOTES N8  &kp N9        &kp PLUS
           &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp DOLLAR      &kp PERCENT    &kp BACKSPACE  &mt SINGLE_QUOTE NUMBER_4  &mt ASTRK N5          &kp NUMBER_6  &kp F10
&kp TILDE  &kp LESS_THAN    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERIOD      &kp PIPE       &kp F11        &mt PIPE NUMBER_1          &kp NUMBER_2          &kp NUMBER_3  &kp F15   &kp F16
                                                  &trans                 &kp COLON       &trans         &kp MINUS      &kp N0                     &kp PERIOD
            >;
        };

        cursor {
            bindings = <
                   &kp LA(BACKSPACE)   &kp RA(LEFT_ARROW)  &kp RA(RIGHT_ARROW)  &kp DOLLAR             &kp UNDERSCORE    &kp N5           &kp HOME       &kp END       &kp PAGE_UP  &none
                   &kp LA(LEFT_ARROW)  &kp LEFT_BRACKET    &kp LEFT_BRACE       &kp LEFT_PARENTHESIS   &kp MINUS         &kp LEFT         &kp DOWN       &kp UP_ARROW  &kp RIGHT    &kp PAGE_DOWN
&kp LG(BACKSPACE)  &kp LG(UP_ARROW)    &kp RIGHT_BRACKET   &kp RIGHT_BRACE      &kp RIGHT_PARENTHESIS  &kp PIPE          &kp EQUAL        &kp BACKSPACE  &kp DEL       &kp STAR     &kp FSLH       &kp CARET
                                                           &trans               &trans                 &trans            &kp KP_NUMBER_0  &kp TAB        &kp PERCENT
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
